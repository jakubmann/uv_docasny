{"version":3,"sources":["components/Canvas.js","components/Color.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","state","strokestyle","lineWidth","isPainting","prevPos","offsetX","offsetY","mediaHandle","handleInput","e","setState","target","value","submit","canvas","toBlob","blob","form","FormData","append","Blob","JSON","stringify","type","xhr","XMLHttpRequest","open","responseType","onload","console","log","response","id","send","alert","componentDidMount","width","height","ctx","getContext","lineJoin","lineCap","addEventListener","preventDefault","stopPropagation","rect","getBoundingClientRect","targetTouches","pageX","left","pageY","top","endPaintEvent","offsetData","paint","handleClientLoad","window","gapi","load","initClient","client","init","then","onMouseDown","nativeEvent","onMouseMove","currPos","x","y","beginPath","strokeStyle","props","moveTo","lineTo","stroke","className","ref","this","onMouseUp","onMouseLeave","onChange","placeholder","onClick","React","Component","Color","colors","map","c","i","style","changeColor","App","changeWidth","color","min","max","step","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd2ceb46.chunk.js","sourcesContent":["import React from 'react'\nimport {gapi} from 'gapi-script'\n\nexport default class Canvas extends React.Component {\n    \n    state = {\n        strokestyle: '#000000',\n        lineWidth: 20,\n        isPainting: false,\n        prevPos: {offsetX: 0, offsetY: 0},\n        mediaHandle: ''\n    }\n\n    handleInput= e => {\n        this.setState({\n            mediaHandle: e.target.value\n        })\n    }\n\n    submit = () => {\n        if (this.state.mediaHandle !== '') {\n            this.canvas.toBlob((blob) => {\n                let metadata = {\n                    'name': 'sampleName', // Filename at Google Drive\n                    'mimeType': 'blob', // mimeType at Google Drive\n                    'parents': ['UV_SHIRT'], // Folder ID at Google Drive\n                };\n\n\n                let form = new FormData();\n                form.append('metadata', new Blob([JSON.stringify(metadata)], {type: 'application/json'}));\n                form.append('file', blob);\n\n                let xhr = new XMLHttpRequest();\n                xhr.open('post', 'https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id');\n                xhr.responseType = 'json';\n                xhr.onload = () => {\n                    console.log(xhr.response.id); // Retrieve uploaded file ID.\n                };\n                xhr.send(form);\n\n            });\n        } else {\n            alert('Hoď nám svůj username')\n        }\n    }\n\n    componentDidMount = () => {\n        this.canvas.width = 1000\n        this.canvas.height = 1500\n        this.ctx = this.canvas.getContext('2d')\n        this.ctx.lineJoin = 'round'\n        this.ctx.lineCap = 'round'\n\n        this.canvas.addEventListener(\"touchstart\", e => {\n           \n            e.preventDefault()\n            e.stopPropagation();\n            let rect = e.target.getBoundingClientRect();\n            let offsetX = e.targetTouches[0].pageX - rect.left\n            let offsetY = e.targetTouches[0].pageY - rect.top\n\n            offsetX *= 8\n            offsetY *= 8\n            this.setState({\n                isPainting: true,\n                prevPos: {offsetX, offsetY}\n            })\n\n            console.log(\"START\")\n            console.log(this.state.prevPos)\n            \n\n\n            \n        })\n\n       \n\n        this.canvas.addEventListener(\"touchend\", e => {\n            \n\n            \n            e.preventDefault()\n            e.stopPropagation()\n            this.endPaintEvent()\n            \n        })\n\n        this.canvas.addEventListener(\"touchmove\", e => {\n            e.preventDefault()\n            e.stopPropagation();\n\n            \n            if (this.state.isPainting) {\n                let rect = e.target.getBoundingClientRect()\n                let offsetX = e.targetTouches[0].pageX - rect.left\n                let offsetY = e.targetTouches[0].pageY - rect.top\n                offsetX *= 8\n                offsetY *= 8\n                const offsetData = {offsetX, offsetY}\n                this.paint(offsetData)\n                console.log(offsetData)\n            }\n\n        })\n\n        this.canvas.addEventListener(\"touchend\", e => {\n            this.endPaintEvent()\n        })\n        this.handleClientLoad()\n        \n\n\n    }\n\n    handleClientLoad = () => {\n        window.gapi.load('client:auth2', this.initClient)\n    }\n\n\n    initClient = () => {\n        try{\n          window.gapi.client.init({\n              'apiKey': \"AIzaSyAXxqd8IkY84aidGnavfd6A5rJ8tvDdDls\",\n            }).then(() => {\n                console.log('gapi authorized')\n                \n            })\n              \n        }catch(e){\n          console.log(e);\n        }\n      }\n\n    onMouseDown = ({nativeEvent}) => {\n        const {offsetX, offsetY} = nativeEvent\n        this.setState({\n            isPainting: true,\n            prevPos: {offsetX, offsetY}\n        })\n    }\n\n    onMouseMove = ({nativeEvent}) => {\n        if (this.state.isPainting) {\n            const {offsetX, offsetY} = nativeEvent\n            const offsetData = {offsetX, offsetY}\n            this.paint(offsetData)\n            console.log(offsetX)\n        }\n        \n    }\n\n    endPaintEvent = () => {\n        if (this.state.isPainting) {\n            this.setState({isPainting: false})\n        }\n    }\n\n    paint = (currPos) => {\n        const {offsetX, offsetY} = currPos\n        const {offsetX: x, offsetY: y} = this.state.prevPos\n        console.log(currPos)\n        this.ctx.beginPath()\n        this.ctx.strokeStyle = this.props.strokeStyle\n        this.ctx.lineWidth = this.props.lineWidth\n        this.ctx.moveTo(x, y)\n        this.ctx.lineTo(offsetX, offsetY)\n        this.ctx.stroke()\n        this.setState({\n            prevPos: {offsetX, offsetY}\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                    <canvas \n                        className=\"canvas\"\n                        ref={ref => this.canvas = ref}\n\n                        onMouseDown={this.onMouseDown}\n                        onMouseUp={this.endPaintEvent}\n                        onMouseLeave={this.endPaintEvent}\n                        onMouseMove={this.onMouseMove}\n\n                    />\n                    <div className=\"upload\" >\n                        <input className=\"upload__input\" onChange={this.handleInput} value={this.state.mediaHandle} placeholder=\"Sem hoď svůj IG username nebo adresu tvojí mámy\"></input>\n                        <button className=\"upload__button\" onClick={this.submit}>Poslat</button>\n                    </div>\n                        \n                    </div>\n                \n        )\n    }\n}","import React from 'react'\n\nexport default class Color extends React.Component {\n    \n    state = {\n        colors: ['#000000', '#ffffff', '#1fea00', '#ea0000', '#0f59e2']\n    }\n    render() {\n        return (\n            <div className=\"colors\">\n                {this.state.colors.map((c, i) => {\n                    if (c === '#ffffff') {\n                        return <div className=\"color\" key={i} style={{'background': c, 'border': '1px solid black'}} onClick={() => this.props.changeColor(c)}></div>\n\n                    }\n                    else {\n                        return <div className=\"color\" key={i} style={{'background': c}} onClick={() => this.props.changeColor(c)}></div>\n                    }\n                })}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './style.css'\nimport Canvas from './components/Canvas.js'\nimport Color from './components/Color.js'\n\n\n\nexport default class App extends React.Component {\n  state = {\n    lineWidth: 20,\n    strokeStyle: '#000000'\n  }\n  \n\n\n  changeWidth = e => {\n    this.setState({\n      lineWidth: e.target.value\n    })\n  }\n\n  changeColor = (color) => {\n    this.setState({\n      strokeStyle: color\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"shirt\">\n          <Canvas lineWidth={this.state.lineWidth} strokeStyle={this.state.strokeStyle}/>\n        </div>\n        \n        <div className=\"tools\">\n          <div className=\"brushSize\">\n            <input type=\"range\" min=\"0\" max=\"200\"  step=\"10\" value={this.state.lineWidth} onChange={this.changeWidth}></input>\n          </div>\n          <Color changeColor={this.changeColor} />\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}